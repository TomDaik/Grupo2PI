package view;

import application.Program;
import java.awt.Color;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.event.ChangeEvent;
import javax.swing.event.ChangeListener;
import javax.swing.table.DefaultTableModel;
import model.entities.Acao;
import model.entities.Atividade;
import model.entities.Empresa;
import model.entities.Funcionario;
import model.entities.ProjetoEmpresa;
import static model.entities.enums.StatusProjeto.FAZER;
import model.entities.enums.StatusSituacao;
import static model.entities.enums.StatusSituacao.ATRASADO;
import static model.entities.enums.StatusSituacao.NO_PRAZO;
import model.entities.enums.StatusProjeto;
import static model.entities.enums.StatusProjeto.CONCLUIDO;
import static model.entities.enums.StatusProjeto.FAZENDO;
import static model.entities.enums.StatusProjeto.FAZER;
import model.entities.enums.StatusSituacao;

/**
 *
 * @author leonidiojr
 */


public class DetalheAtividade extends javax.swing.JFrame {

    /**
     * Creates new form DetalheProjeto
     */
    
    
    public DetalheAtividade() {
        
    
        initComponents();
        this.setLocationRelativeTo(null);   
        this.getContentPane().setBackground(Color.WHITE);                
        
        this.jTextField1.setText(program.minhaEmpresa.getListaProjetos().get(program.getProjetoAtivo()).getAtividades().get(program.getAtividadeAtiva()).getNome());
        String FormatoDataStringSimples =  program.FormatoDataStringSimples(program.minhaEmpresa.getListaProjetos().get(program.getProjetoAtivo()).getAtividades().get(program.getAtividadeAtiva()).getDataInicio());
        this.jFormattedTextField1.setText(FormatoDataStringSimples);        
        FormatoDataStringSimples = program.FormatoDataStringSimples(program.minhaEmpresa.getListaProjetos().get(program.getProjetoAtivo()).getAtividades().get(program.getAtividadeAtiva()).getDataFim());
        this.jFormattedTextField2.setText(FormatoDataStringSimples);
        
        this.jTextField2.setText(program.minhaEmpresa.getListaProjetos().get(program.getProjetoAtivo()).getAtividades().get(program.getAtividadeAtiva()).getProjeto().getEmpresa().getNomeEmpresa());
        this.jTextField3.setText(program.minhaEmpresa.getListaProjetos().get(program.getProjetoAtivo()).getAtividades().get(program.getAtividadeAtiva()).getProjeto().getEmpresa().getListaDepartamentos().get(program.getDepartamentoAtivo()).getNomeDepartamento());                
        this.jTextField4.setText(program.minhaEmpresa.getListaProjetos().get(program.getProjetoAtivo()).getAtividades().get(program.getAtividadeAtiva()).getProjeto().getNome());                
        double numeroDouble = program.minhaEmpresa.getListaProjetos().get(program.getProjetoAtivo()).getAtividades().get(program.getAtividadeAtiva()).getPercentualAtividade();
        int numeroPiso = (int) Math.floor(numeroDouble); 
        this.jProgressBar1.setValue(numeroPiso);
        this.jSlider1.setValue(numeroPiso);    
        
        AtualizarStatus(null); 
                
        this.jProgressBar1.setStringPainted(true);
        
        this.jSlider1.addChangeListener(new ChangeListener() {
            @Override
            public void stateChanged(ChangeEvent e) {
                int value = jSlider1.getValue();
                jProgressBar1.setValue(value); 
            }
        });        
        
    }
        
    
    //Acessa instancia unica do Programa
    Program program = application.Program.programShared;    
    
    
    private StatusSituacao  situacaoAtividade;
    private StatusProjeto statusAtividade;
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane2 = new javax.swing.JScrollPane();
        jTextArea2 = new javax.swing.JTextArea();
        textField1 = new java.awt.TextField();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        jProgressBar1 = new javax.swing.JProgressBar();
        jLabel6 = new javax.swing.JLabel();
        jComboBox2 = new javax.swing.JComboBox<>();
        jLabel7 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jFormattedTextField1 = new javax.swing.JFormattedTextField();
        jFormattedTextField2 = new javax.swing.JFormattedTextField();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jTextField2 = new javax.swing.JTextField();
        jTextField3 = new javax.swing.JTextField();
        jTextField4 = new javax.swing.JTextField();
        jScrollPane4 = new javax.swing.JScrollPane();
        jTable4 = new javax.swing.JTable();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();
        jButton7 = new javax.swing.JButton();
        jSlider1 = new javax.swing.JSlider();
        jButton8 = new javax.swing.JButton();

        jTextArea2.setColumns(20);
        jTextArea2.setRows(5);
        jScrollPane2.setViewportView(jTextArea2);

        textField1.setText("textField1");

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Kanban Fast - Detalhes da Atividade");
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosed(java.awt.event.WindowEvent evt) {
                formWindowClosed(evt);
            }
        });

        jButton1.setText("Ok");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Cancelar");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jLabel5.setText("Empresa:");
        jLabel5.setToolTipText("");

        jLabel6.setText("Percentual concluso:");
        jLabel6.setToolTipText("");

        jComboBox2.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "ATRASADO", "NO_PRAZO" }));
        jComboBox2.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jComboBox2FocusGained(evt);
            }
        });

        jLabel7.setText("Situação");
        jLabel7.setToolTipText("");

        jLabel1.setText("Nome da Atividade:");

        jTextField1.setToolTipText("");

        jLabel2.setText("Data de Início:");

        jLabel3.setText("Data Final:");
        jLabel3.setToolTipText("");

        jFormattedTextField1.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.DateFormatter(java.text.DateFormat.getDateInstance(java.text.DateFormat.SHORT))));
        jFormattedTextField1.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                AtualizarStatus(evt);
            }
        });

        jFormattedTextField2.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.DateFormatter(java.text.DateFormat.getDateInstance(java.text.DateFormat.SHORT))));
        jFormattedTextField2.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                AtualizarStatus(evt);
            }
        });

        jLabel8.setText("Altere as informaçõe da Atividade");

        jLabel9.setText("Departamento:");
        jLabel9.setToolTipText("");

        jLabel10.setText("Projeto:");
        jLabel10.setToolTipText("");

        jTextField2.setEnabled(false);

        jTextField3.setEnabled(false);

        jTextField4.setEnabled(false);

        jTable4.setBackground(new java.awt.Color(255, 153, 153));
        jTable4.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Atividade", "Ação", "Inicio", "Fim", "Situação"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable4.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable4MouseClicked(evt);
            }
        });
        jScrollPane4.setViewportView(jTable4);

        jButton3.setText("Nova");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton4.setText("Excluir");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jButton5.setText("Atribuir responsável");
        jButton5.setEnabled(false);
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        jButton6.setText("Concluir Tudo");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        jButton7.setText("Postergar data final");
        jButton7.setEnabled(false);
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });

        jSlider1.setValue(0);
        jSlider1.setEnabled(false);
        jSlider1.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                jSlider1PropertyChange(evt);
            }
        });

        jButton8.setText("Nova");
        jButton8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton8ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel8, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 407, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel9)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel6)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jSlider1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jProgressBar1, javax.swing.GroupLayout.DEFAULT_SIZE, 264, Short.MAX_VALUE)))
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                        .addGroup(layout.createSequentialGroup()
                                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addComponent(jLabel1)
                                                    .addComponent(jLabel2)
                                                    .addComponent(jLabel3))
                                                .addComponent(jLabel5, javax.swing.GroupLayout.Alignment.LEADING))
                                            .addGap(18, 18, 18))
                                        .addGroup(layout.createSequentialGroup()
                                            .addComponent(jLabel10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addGap(78, 78, 78)))
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(jTextField1, javax.swing.GroupLayout.DEFAULT_SIZE, 268, Short.MAX_VALUE)
                                        .addComponent(jFormattedTextField2)
                                        .addComponent(jFormattedTextField1)
                                        .addComponent(jTextField2)
                                        .addComponent(jTextField3)
                                        .addComponent(jTextField4)))
                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                    .addComponent(jLabel7)
                                    .addGap(78, 78, 78)
                                    .addComponent(jComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, 264, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(18, 18, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 718, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jButton8, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jButton5)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButton6, javax.swing.GroupLayout.PREFERRED_SIZE, 157, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButton7, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap(32, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(jFormattedTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(20, 20, 20)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(jFormattedTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5)
                            .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(15, 15, 15)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel9)
                            .addComponent(jTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jTextField4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel10))
                        .addGap(37, 37, 37)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel6)
                            .addComponent(jProgressBar1, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jSlider1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(20, 20, 20)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel7)
                            .addComponent(jComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 416, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jButton5, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jButton6, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jButton7, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jButton8, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(38, 38, 38))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed

        String textoValidar = this.jTextField1.getText();
        if (textoValidar.length() < 3) {
            JOptionPane.showMessageDialog(null, "Você precisa fornecer um nome válido para o projeto da empresa.");
            this.jTextField1.requestFocus();
        } else {
            textoValidar = this.jFormattedTextField1.getText();
            if (textoValidar.length() < 10) {
                JOptionPane.showMessageDialog(null, "Você precisa fornecer uma data válida para o projeto da empresa.");
                this.jFormattedTextField1.requestFocus();
            } else {
                textoValidar = this.jFormattedTextField2.getText();
                if (textoValidar.length() < 10) {
                    JOptionPane.showMessageDialog(null, "Você precisa fornecer uma data válida para o projeto da empresa.");
                    this.jFormattedTextField2.requestFocus();                                                                                                    
                } 
                    boolean compara = program.minhaEmpresa.getListaProjetos().get(program.getProjetoAtivo()).CompararDataInicioFim(program.converterParaData(this.jFormattedTextField1.getText()), program.converterParaData(this.jFormattedTextField2.getText()));                        
                    if (compara == false){
                    JOptionPane.showMessageDialog(null, "Você precisa fornecer uma data inicial e final válidas para o projeto da empresa.");
                    this.jFormattedTextField1.requestFocus();                                                                                                                                                    
                } else {                       
                    program.minhaEmpresa.getListaProjetos().get(program.getProjetoAtivo()).getAtividades().get(program.getAtividadeAtiva()).setNome(this.jTextField1.getText());
                    program.minhaEmpresa.getListaProjetos().get(program.getProjetoAtivo()).getAtividades().get(program.getAtividadeAtiva()).setDataInicio(program.converterParaData(this.jFormattedTextField1.getText()));
                    program.minhaEmpresa.getListaProjetos().get(program.getProjetoAtivo()).getAtividades().get(program.getAtividadeAtiva()).setDataFim(program.converterParaData(this.jFormattedTextField2.getText()));
                    double valorPercent = (double) this.jProgressBar1.getValue();
                    program.minhaEmpresa.getListaProjetos().get(program.getProjetoAtivo()).getAtividades().get(program.getAtividadeAtiva()).setPercentualAtividade(valorPercent);                                                                                                                                            
                   if (program.minhaEmpresa.getListaProjetos().get(program.getProjetoAtivo()).getAtividades().get(program.getAtividadeAtiva()).getPercentualAtividade() == 0) {
                        program.minhaEmpresa.getListaProjetos().get(program.getProjetoAtivo()).getAtividades().get(program.getAtividadeAtiva()).setSituacao(statusAtividade.FAZER);
                    } else {
                        if(program.minhaEmpresa.getListaProjetos().get(program.getProjetoAtivo()).getAtividades().get(program.getAtividadeAtiva()).getPercentualAtividade() == 100) {
                            program.minhaEmpresa.getListaProjetos().get(program.getProjetoAtivo()).getAtividades().get(program.getAtividadeAtiva()).setSituacao(statusAtividade.CONCLUIDO);
                        } else program.minhaEmpresa.getListaProjetos().get(program.getProjetoAtivo()).getAtividades().get(program.getAtividadeAtiva()).setSituacao(statusAtividade.FAZENDO);
                    }                                            
                    this.dispose();       
                    new TelaPrincipal().setVisible(true); 
                }
            }
        }
         


    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        this.dispose();
        new TelaPrincipal().setVisible(true);  
    }//GEN-LAST:event_jButton2ActionPerformed

    private void AtualizarStatus(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_AtualizarStatus
                 

        if (program.minhaEmpresa.getListaProjetos().get(program.getProjetoAtivo()).getAtividades().get(program.getAtividadeAtiva()).getAcoes().size() == 0){
            this.jSlider1.enable(true);
        }else{
            this.jSlider1.enable(false);
        }

        
        Date dataInicial = program.converterParaData(this.jFormattedTextField1.getText()) ;
        Date dataFinal = program.converterParaData(this.jFormattedTextField2.getText()) ;
        if (!dataFinal.after(dataInicial)){
            this.jFormattedTextField2.setText(this.jFormattedTextField1.getText());
        }
        
        Date dataAtual = new Date();
        if (!dataAtual.after(dataFinal) || dataFinal.equals(dataAtual)){
            this.jComboBox2.setSelectedIndex(1);                   
        } else{
            this.jComboBox2.setSelectedIndex(0);
        }        
        
            // Cria um modelo de tabela vazio
        DefaultTableModel concluso = new DefaultTableModel();
        // Define as colunas no modelo (caso necessário)
        concluso.addColumn("T");
        concluso.addColumn("Tipo");
        concluso.addColumn("Descrição");       
        concluso.addColumn("Início");       
        concluso.addColumn("Fim");           
        concluso.addColumn("Situação");      
        concluso.addColumn(" % ");                              
        
        int count =0;
        for (Acao minhaAcao : program.minhaEmpresa.getListaProjetos().get(program.getProjetoAtivo()).getAtividades().get(program.getAtividadeAtiva()).getAcoes()) {
            situacaoAtividade = minhaAcao.getSituacao();
            count = count + 1;
            concluso.addRow(new Object[]{
                count,
                minhaAcao.getNome(),
                minhaAcao.getAtividade().getNome(),
                program.FormatoDataStringSimples(minhaAcao.getDataInicio()),
                program.FormatoDataStringSimples(minhaAcao.getDataFim()),
                minhaAcao.getSituacao(),
                minhaAcao.getPercentualAcao(),
            });            
        }
        this.jTable4.setModel(concluso);
        
        
        
    }//GEN-LAST:event_AtualizarStatus

    private void jComboBox2FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jComboBox2FocusGained
        AtualizarStatus(null);
    }//GEN-LAST:event_jComboBox2FocusGained

    private void jTable4MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable4MouseClicked
        
        int linhaSelecionada = jTable4.getSelectedRow();        
        System.out.println(linhaSelecionada);
        if (linhaSelecionada>-1){    
            Object valorCelula = jTable4.getValueAt(linhaSelecionada, 0); // Obtém o valor da primeira coluna
            if (valorCelula != null) {
                System.out.println(valorCelula);
                program.setAcaoAtiva(Integer.parseInt(valorCelula.toString())-1);                                    
                this.dispose();                
                new DetalheAcao().setVisible(true);  
            }                                            
        }                       

    }//GEN-LAST:event_jTable4MouseClicked

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        
        // Exibe a caixa de diálogo de entrada de texto
        
        this.dispose();
        String userInput = JOptionPane.showInputDialog(null, "Digite o nome da tarefa que deseja adicionar:");        
        
        // Verifica se o usuário clicou em OK ou Cancelar
        if (userInput != null) {
            Object[] options = {"OK", "Cancelar"};
            int selection = JOptionPane.showOptionDialog(
                    null,
                    "Você digitou: " + userInput + ". Deseja continuar?",
                    "Confirmação",
                    JOptionPane.YES_NO_OPTION,
                    JOptionPane.QUESTION_MESSAGE,
                    null,
                    options,
                    options[0]); // Índice do botão padrão (neste caso, "OK")

            // Verifica a opção selecionada pelo usuário            
            Date dataInicio= new Date();                                
            Date dataFinal= new Date();    
            
            //String nome, Date dataInicio, Date dataFim, Double percentualAcao, StatusProjeto status, StatusSituacao situacao, Funcionario funcionario, Atividade atividade
            List<Atividade> listaAtividades = new ArrayList<>();
            listaAtividades = program.minhaEmpresa.getListaProjetos().get(program.getProjetoAtivo()).getAtividades();
            Atividade novaAtividade = new Atividade();
            novaAtividade.setNome(userInput);
            novaAtividade.setDataInicio(dataInicio);
            novaAtividade.setDataFim(dataFinal);
            novaAtividade.setProjeto(program.minhaEmpresa.getListaProjetos().get(program.getProjetoAtivo()));
            novaAtividade.setPercentualAtividade(0.0);
            novaAtividade.setSituacao(FAZER);
            if (selection == JOptionPane.OK_OPTION) {                                                                
                listaAtividades.add(novaAtividade);
                program.minhaEmpresa.getListaProjetos().get(program.getProjetoAtivo()).setListaAtividades(listaAtividades);
                program.setAtividadeAtiva(program.minhaEmpresa.getListaProjetos().get(program.getProjetoAtivo()).getAtividades().size()-1);
            new DetalheAtividade().setVisible(true);  
            } else if (selection == JOptionPane.CANCEL_OPTION || selection == JOptionPane.CLOSED_OPTION) {
                JOptionPane.showMessageDialog(null, "Operação cancelada.");
                new TelaPrincipal().setVisible(true);  
            }      
            
            
        } else new TelaPrincipal().setVisible(true);  
         
        
        
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
               // Exibe a caixa de diálogo de entrada de texto
        
        this.dispose();
        String userInput = JOptionPane.showInputDialog(null, "Digite o número da ação que deseja remover:");        
        
        // Verifica se o usuário clicou em OK ou Cancelar
        if (userInput != null) {
            Object[] options = {"OK", "Cancelar"};
            int selection = JOptionPane.showOptionDialog(
                    null,
                    "Você digitou: " + userInput + ". Deseja continuar?",
                    "Confirmação",
                    JOptionPane.YES_NO_OPTION,
                    JOptionPane.QUESTION_MESSAGE,
                    null,
                    options,
                    options[0]); // Índice do botão padrão (neste caso, "OK")
            
            if (selection == JOptionPane.OK_OPTION) {                                                                
                try {                    
                    int remove = Integer.valueOf(userInput)-1;
                    program.minhaEmpresa.getListaProjetos().get(program.getProjetoAtivo()).getAtividades().get(program.getAtividadeAtiva()).removeListaAcoes(program.minhaEmpresa.getListaProjetos().get(program.getProjetoAtivo()).getAtividades().get(program.getAtividadeAtiva()).getAcoes().remove(remove));
                    program.setAcaoAtiva(program.minhaEmpresa.getListaProjetos().get(program.getProjetoAtivo()).getAtividades().get(program.getAtividadeAtiva()).getAcoes().size()-1);                    
                } catch (Exception e) {
                    JOptionPane.showMessageDialog(null, "Erro ao remover a atividade!");
                }                            
            } else if (selection == JOptionPane.CANCEL_OPTION || selection == JOptionPane.CLOSED_OPTION) {
                JOptionPane.showMessageDialog(null, "Operação cancelada.");                
            }      
            new DetalheAtividade().setVisible(true);  
            
            
        } else new TelaPrincipal().setVisible(true);  
        
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        
        String inputFuncionarios = "Funcionários\n";
        int countFuncionarios=0;
        for (Funcionario meuFuncionario :program.minhaEmpresa.getListaDepartamentos().get(0).getListaFuncionarios()) {
            countFuncionarios = countFuncionarios + 1;
            inputFuncionarios = inputFuncionarios + countFuncionarios + " - " +  meuFuncionario.getNomeFuncionario() + "\n"; 
        }           
                
        String userInput = JOptionPane.showInputDialog(null, inputFuncionarios + "Digite o número do funcionário para vincular a Atividade:");                
        // Verifica se o usuário clicou em OK ou Cancelar
        if (userInput != null) {
            Object[] options = {"OK", "Cancelar"};
            int selection = JOptionPane.showOptionDialog(
                    null,
                    "Você digitou: " + userInput + ". Deseja continuar?",
                    "Confirmação",
                    JOptionPane.YES_NO_OPTION,
                    JOptionPane.QUESTION_MESSAGE,
                    null,
                    options,
                    options[0]); // Índice do botão padrão (neste caso, "OK")

            if (selection == JOptionPane.OK_OPTION) {                                                                
                this.dispose();                
                Funcionario meuFuncionario = program.minhaEmpresa.getListaDepartamentos().get(program.getDepartamentoAtivo()).getListaFuncionarios().get(Integer.parseInt(userInput));
                program.minhaEmpresa.getListaProjetos().get(program.getProjetoAtivo()).getListaAtividades().get(program.getAtividadeAtiva()).getAcoes().get(program.getAcaoAtiva()).setFuncionario(meuFuncionario);                
                new DetalheAtividade().setVisible(true);  
            } else if (selection == JOptionPane.CANCEL_OPTION || selection == JOptionPane.CLOSED_OPTION) {
                JOptionPane.showMessageDialog(null, "Operação cancelada.");                
            }      
        }

        
        

        
        
        
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
            
        this.dispose();
        Object[] options = {"OK", "Cancelar"};
        int selection = JOptionPane.showOptionDialog(
                null,
                "Você deseja marcar a atividade e todas as ações como  100% conclusas?",
                "Confirmação",
                JOptionPane.YES_NO_OPTION,
                JOptionPane.QUESTION_MESSAGE,
                null,
                options,
                options[0]); // Índice do botão padrão (neste caso, "OK")

        if (selection == JOptionPane.OK_OPTION) {
            try {
                int count = 0;
                for (Acao acaoConclusa :program.minhaEmpresa.getListaProjetos().get(program.getProjetoAtivo()).getAtividades().get(program.getAtividadeAtiva()).getAcoes()) {
                    count = count +1;
                    acaoConclusa.setPercentualAcao(100.0);
                    acaoConclusa.setSituacao(ATRASADO);
                    acaoConclusa.setStatus(CONCLUIDO);
                }
                if (program.minhaEmpresa.getListaProjetos().get(program.getProjetoAtivo()).getAtividades().get(program.getAtividadeAtiva()).getAcoes().size() == 0){
                    program.minhaEmpresa.getListaProjetos().get(program.getProjetoAtivo()).getAtividades().get(program.getAtividadeAtiva()).setPercentualAtividade(100.0);
                }
                program.minhaEmpresa.getListaProjetos().get(program.getProjetoAtivo()).getAtividades().get(program.getAtividadeAtiva()).calcPercent();                
            } catch (Exception e) {
                JOptionPane.showMessageDialog(null, "Erro ao remover a atividade!");
            }
        } else if (selection == JOptionPane.CANCEL_OPTION || selection == JOptionPane.CLOSED_OPTION) {
            JOptionPane.showMessageDialog(null, "Operação cancelada.");
        }                
        new DetalheAtividade().setVisible(true);  
            
    }//GEN-LAST:event_jButton6ActionPerformed

    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed
    
        try {
            String userInput = JOptionPane.showInputDialog(null, "Digite a quantidade de dias para adicionar ao término da atividade:");                
            // Verifica se o usuário clicou em OK ou Cancelar
            if (userInput != null) {                            
                program.minhaEmpresa.getListaProjetos().get(program.getProjetoAtivo()).getAtividades().get(program.getAtividadeAtiva()).prorrogarData(program.minhaEmpresa.getListaProjetos().get(program.getProjetoAtivo()).getAtividades().get(program.getAtividadeAtiva()).getDataFim(),30);
                String FormatoDataStringSimples = program.FormatoDataStringSimples(program.minhaEmpresa.getListaProjetos().get(program.getProjetoAtivo()).getAtividades().get(program.getAtividadeAtiva()).getDataFim());
                this.jFormattedTextField2.setText(FormatoDataStringSimples);
                JOptionPane.showMessageDialog(null, "A data foi prorrogada para " + this.jFormattedTextField2.getText());
            }            
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Erro ao executar a operação.");
        }
        
        
        
    }//GEN-LAST:event_jButton7ActionPerformed

    private void formWindowClosed(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosed

        
    
    }//GEN-LAST:event_formWindowClosed

    private void jSlider1PropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_jSlider1PropertyChange
        
    }//GEN-LAST:event_jSlider1PropertyChange

    private void jButton8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton8ActionPerformed
               // Exibe a caixa de diálogo de entrada de texto
        
        this.dispose();
        String userInput = JOptionPane.showInputDialog(null, "Digite o nome da ação que deseja adicionar:");        
        
        // Verifica se o usuário clicou em OK ou Cancelar
        if (userInput != null) {
            Object[] options = {"OK", "Cancelar"};
            int selection = JOptionPane.showOptionDialog(
                    null,
                    "Você digitou: " + userInput + ". Deseja continuar?",
                    "Confirmação",
                    JOptionPane.YES_NO_OPTION,
                    JOptionPane.QUESTION_MESSAGE,
                    null,
                    options,
                    options[0]); // Índice do botão padrão (neste caso, "OK")

            // Verifica a opção selecionada pelo usuário            
            Date dataInicio= new Date();                                
            Date dataFinal= new Date();                                    
            
            //String nome, Date dataInicio, Date dataFim, Double percentualAcao, StatusProjeto status, StatusSituacao situacao, Funcionario funcionario, Atividade atividade
            List<Acao> listaAcao = new ArrayList<>();
            listaAcao = program.minhaEmpresa.getListaProjetos().get(program.getProjetoAtivo()).getAtividades().get(program.getAtividadeAtiva()).getAcoes();
            Acao novaAcao = new Acao();
            novaAcao.setNome(userInput);
            novaAcao.setDataInicio(dataInicio);
            novaAcao.setDataFim(dataFinal);
            novaAcao.setAtividade(program.minhaEmpresa.getListaProjetos().get(program.getProjetoAtivo()).getAtividades().get(program.getAtividadeAtiva()));
            novaAcao.setSituacao(NO_PRAZO);
            novaAcao.setPercentualAcao(0.0);
            novaAcao.setStatus(FAZER);
            novaAcao.setFuncionario(program.meuFuncionario);
            if (selection == JOptionPane.OK_OPTION) {                                                                
                program.minhaEmpresa.getListaProjetos().get(program.getProjetoAtivo()).getAtividades().get(program.getAtividadeAtiva()).addListaAcoes(novaAcao);
                program.setAcaoAtiva(program.minhaEmpresa.getListaProjetos().get(program.getProjetoAtivo()).getAtividades().get(program.getAtividadeAtiva()).getAcoes().size()-1);
            new DetalheAcao().setVisible(true);  
            } else if (selection == JOptionPane.CANCEL_OPTION || selection == JOptionPane.CLOSED_OPTION) {
                JOptionPane.showMessageDialog(null, "Operação cancelada.");
                new DetalheAtividade().setVisible(true);  
            }      
            
            
        } else new DetalheAtividade().setVisible(true);  

    }//GEN-LAST:event_jButton8ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(DetalheAtividade.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(DetalheAtividade.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(DetalheAtividade.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(DetalheAtividade.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new DetalheAtividade().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JButton jButton8;
    private javax.swing.JComboBox<String> jComboBox2;
    private javax.swing.JFormattedTextField jFormattedTextField1;
    private javax.swing.JFormattedTextField jFormattedTextField2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JProgressBar jProgressBar1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JSlider jSlider1;
    private javax.swing.JTable jTable4;
    private javax.swing.JTextArea jTextArea2;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JTextField jTextField3;
    private javax.swing.JTextField jTextField4;
    private java.awt.TextField textField1;
    // End of variables declaration//GEN-END:variables
}
